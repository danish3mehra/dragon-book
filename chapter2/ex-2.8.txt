Exercise 2.8.1: For-statements in C and Java have the form:
    for ( expr1 ; expr2 ; expr3 ) stmt

    The first expression is executed before the loop; it is typically used for
    initializing the loop index. The second expression is a test made before each
    iteration of the loop; the loop is exited if the expression becomes 0. The loop
    itself can be thought of as the statement {stmt expr3;}. The third expression
    is executed at the end of each iteration; it is typically used to increment
    the loop index. The meaning of the for-statement is similar to

    expr1; while ( expr2 ) { stmt expr3; }

    Define a class For for for-statements, similar to class If in Fig. 2.43.

    Figure 2.43: Function gen in class If generates three-address code.

        class If extends Stmt {
            Expr E; Stmt S;
            public If(Expr x, Stmt y) { E = x; S = y; after = newlabel(); }
            public void gen() {
                Expr n = E.rvalue();
                emit("ifFalse " + n.toString() + " goto " + after);
                S.gen();
                emit(after + ":");
            }
        }

    class For extends Stmt {
        Expr L, M, R; Stmt S;
        public For(Expr l, Expr m, Expr r, Stmt y) {
			L = l; M = m; R = r; S = y;
			loop = newlabel(); after = newLabel();
		}
        public void gen() {
			L.gen();
			emit(loop + ":");
			emit("ifFalse " + M.toString() + " goto " + after);
			S.gen();
			R.gen();
			emit("goto " + loop);
			emit(after + ":");
        }
    }

Exercise 2.8.2: The programming language C does not have a boolean type.
    Show how a C compiler might translate an if-statement into three-address code.

	void gen() {
		expr_struct n = E.rvalue;
		emit("%s%s%d%s%s", "ifEqual ", n, 0, " goto ", after);
		S.gen();
		emit("%s%s", after, ":");
	}
