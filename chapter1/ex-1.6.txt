Exercise 1.6.1: For the block-structured C code of Fig. 1.13(a), indicate the values assigned
	to w, x, y and z.
	
	Figure 1.13(a): Code for Exercise 1.6.1
	
		int w, x, y, z;
		int i = 4; int j = 5;
		{	int j = 7;
			i = 6;
			w = i + j;
		}
		x = i + j;
		{	int i = 8;
			y = i + j;
		}
		z = i + j;
		
	w = 13
	x = 11
	y = 13
	z = 11
		
Exercise 1.6.2: Repeat Exercise 1.6.1 for the code of Fig. 1.13(b).

	Figure 1.13(b): Code for Exercise 1.6.2
	
		int w, x, y, z;
		int i = 3; int j = 4;
		{	int i = 5;
			w = i + j;
		}
		x = i + j;
		{	int j = 6;
			i = 7;
			y = i + j;
		}
		z = i + j;
		
	w = 9
	x = 7
	y = 13
	z = 11
		
Exercise 1.6.3: For the block-structured code of Fig. 1.14, assuming the usual static scoping
	of declarations, give the scope for each of the twelve declarations.
	
	Figure 1.14: Block structured code for Exercise 1.6.3
	
		{	int w, x, y, z;			/* Block B1 */
			{ 	int x, z;			/* Block B2 */
				{	int w, x;		/* Block B3 */ }
			}
			{	int w, x;			/* Block B4 */
				{	int y, z;		/* Block B5 */ }
			}
		}
		
	Block 1:
		w - B1, B3, B4
		x - B1, B2, B4
		y - B1, B5
		z - B1, B2, B5
	Block 2:
		x - B2, B3
		z - B2
	Block 3:
		w - B3
		x - B3
	Block 4:
		w - B4
		x - B4
	Block 5:
		y - B5
		z - B5

Exercise 1.6.4: What is printed by the following C code?

	#define a (x+1)
	int x = 2;
	void b() { x = a; printf("%d\n", x); }
	void c() { int x = 1; printf("%d\n", a); }
	void main() { b(); c(); }

	3
	2
	